package ccxt

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


type Options struct {
    Params *map[string]interface{}
}

type WatchTickerOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchTickerOptions func(opts *WatchTickerOptionsStruct)

func WithWatchTickerParams(params map[string]interface{}) WatchTickerOptions {
    return func(opts *WatchTickerOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOHLCVOptions func(opts *WatchOHLCVOptionsStruct)

func WithWatchOHLCVTimeframe(timeframe string) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithWatchOHLCVSince(since int64) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOHLCVLimit(limit int64) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOHLCVParams(params map[string]interface{}) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrderBookOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrderBookOptions func(opts *WatchOrderBookOptionsStruct)

func WithWatchOrderBookLimit(limit int64) WatchOrderBookOptions {
    return func(opts *WatchOrderBookOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrderBookParams(params map[string]interface{}) WatchOrderBookOptions {
    return func(opts *WatchOrderBookOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTradesOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchTradesOptions func(opts *WatchTradesOptionsStruct)

func WithWatchTradesSince(since int64) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchTradesLimit(limit int64) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchTradesParams(params map[string]interface{}) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyTradesOptions func(opts *WatchMyTradesOptionsStruct)

func WithWatchMyTradesSymbol(symbol string) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchMyTradesSince(since int64) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyTradesLimit(limit int64) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyTradesParams(params map[string]interface{}) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrdersOptions func(opts *WatchOrdersOptionsStruct)

func WithWatchOrdersSymbol(symbol string) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchOrdersSince(since int64) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOrdersLimit(limit int64) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrdersParams(params map[string]interface{}) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTradesForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchTradesForSymbolsOptions func(opts *WatchTradesForSymbolsOptionsStruct)

func WithWatchTradesForSymbolsSince(since int64) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchTradesForSymbolsLimit(limit int64) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchTradesForSymbolsParams(params map[string]interface{}) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrderBookForSymbolsOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrderBookForSymbolsOptions func(opts *WatchOrderBookForSymbolsOptionsStruct)

func WithWatchOrderBookForSymbolsLimit(limit int64) WatchOrderBookForSymbolsOptions {
    return func(opts *WatchOrderBookForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrderBookForSymbolsParams(params map[string]interface{}) WatchOrderBookForSymbolsOptions {
    return func(opts *WatchOrderBookForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTopicsOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchTopicsOptions func(opts *WatchTopicsOptionsStruct)

func WithWatchTopicsParams(params map[string]interface{}) WatchTopicsOptions {
    return func(opts *WatchTopicsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTickersOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchTickersOptions func(opts *WatchTickersOptionsStruct)

func WithWatchTickersSymbols(symbols []string) WatchTickersOptions {
    return func(opts *WatchTickersOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchTickersParams(params map[string]interface{}) WatchTickersOptions {
    return func(opts *WatchTickersOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOHLCVForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOHLCVForSymbolsOptions func(opts *WatchOHLCVForSymbolsOptionsStruct)

func WithWatchOHLCVForSymbolsSince(since int64) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOHLCVForSymbolsLimit(limit int64) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOHLCVForSymbolsParams(params map[string]interface{}) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPositionsOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchPositionsOptions func(opts *WatchPositionsOptionsStruct)

func WithWatchPositionsSymbols(symbols []string) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchPositionsSince(since int64) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchPositionsLimit(limit int64) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchPositionsParams(params map[string]interface{}) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPublicMultipleOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPublicMultipleOptions func(opts *WatchPublicMultipleOptionsStruct)

func WithWatchPublicMultipleParams(params map[string]interface{}) WatchPublicMultipleOptions {
    return func(opts *WatchPublicMultipleOptionsStruct) {
        opts.Params = &params
    }
}


type WatchLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchLiquidationsOptions func(opts *WatchLiquidationsOptionsStruct)

func WithWatchLiquidationsSince(since int64) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchLiquidationsLimit(limit int64) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchLiquidationsParams(params map[string]interface{}) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchLiquidationsForSymbolsOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchLiquidationsForSymbolsOptions func(opts *WatchLiquidationsForSymbolsOptionsStruct)

func WithWatchLiquidationsForSymbolsSymbols(symbols []string) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchLiquidationsForSymbolsSince(since int64) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchLiquidationsForSymbolsLimit(limit int64) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchLiquidationsForSymbolsParams(params map[string]interface{}) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyLiquidationsOptions func(opts *WatchMyLiquidationsOptionsStruct)

func WithWatchMyLiquidationsSince(since int64) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyLiquidationsLimit(limit int64) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyLiquidationsParams(params map[string]interface{}) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyLiquidationsForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyLiquidationsForSymbolsOptions func(opts *WatchMyLiquidationsForSymbolsOptionsStruct)

func WithWatchMyLiquidationsForSymbolsSince(since int64) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyLiquidationsForSymbolsLimit(limit int64) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyLiquidationsForSymbolsParams(params map[string]interface{}) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderBookWsOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderBookWsOptions func(opts *FetchOrderBookWsOptionsStruct)

func WithFetchOrderBookWsLimit(limit int64) FetchOrderBookWsOptions {
    return func(opts *FetchOrderBookWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderBookWsParams(params map[string]interface{}) FetchOrderBookWsOptions {
    return func(opts *FetchOrderBookWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTickerWsOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTickerWsOptions func(opts *FetchTickerWsOptionsStruct)

func WithFetchTickerWsParams(params map[string]interface{}) FetchTickerWsOptions {
    return func(opts *FetchTickerWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOHLCVWsOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOHLCVWsOptions func(opts *FetchOHLCVWsOptionsStruct)

func WithFetchOHLCVWsTimeframe(timeframe string) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchOHLCVWsSince(since int64) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOHLCVWsLimit(limit int64) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOHLCVWsParams(params map[string]interface{}) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMarkPriceOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchMarkPriceOptions func(opts *WatchMarkPriceOptionsStruct)

func WithWatchMarkPriceParams(params map[string]interface{}) WatchMarkPriceOptions {
    return func(opts *WatchMarkPriceOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMarkPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMarkPricesOptions func(opts *WatchMarkPricesOptionsStruct)

func WithWatchMarkPricesSymbols(symbols []string) WatchMarkPricesOptions {
    return func(opts *WatchMarkPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMarkPricesParams(params map[string]interface{}) WatchMarkPricesOptions {
    return func(opts *WatchMarkPricesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchBidsAsksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchBidsAsksOptions func(opts *WatchBidsAsksOptionsStruct)

func WithWatchBidsAsksSymbols(symbols []string) WatchBidsAsksOptions {
    return func(opts *WatchBidsAsksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchBidsAsksParams(params map[string]interface{}) WatchBidsAsksOptions {
    return func(opts *WatchBidsAsksOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiTickerHelperOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMultiTickerHelperOptions func(opts *WatchMultiTickerHelperOptionsStruct)

func WithWatchMultiTickerHelperSymbols(symbols []string) WatchMultiTickerHelperOptions {
    return func(opts *WatchMultiTickerHelperOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiTickerHelperParams(params map[string]interface{}) WatchMultiTickerHelperOptions {
    return func(opts *WatchMultiTickerHelperOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionWsOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionWsOptions func(opts *FetchPositionWsOptionsStruct)

func WithFetchPositionWsParams(params map[string]interface{}) FetchPositionWsOptions {
    return func(opts *FetchPositionWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsWsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsWsOptions func(opts *FetchPositionsWsOptionsStruct)

func WithFetchPositionsWsSymbols(symbols []string) FetchPositionsWsOptions {
    return func(opts *FetchPositionsWsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsWsParams(params map[string]interface{}) FetchPositionsWsOptions {
    return func(opts *FetchPositionsWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrderWsOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateOrderWsOptions func(opts *CreateOrderWsOptionsStruct)

func WithCreateOrderWsPrice(price float64) CreateOrderWsOptions {
    return func(opts *CreateOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateOrderWsParams(params map[string]interface{}) CreateOrderWsOptions {
    return func(opts *CreateOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type EditOrderWsOptionsStruct struct {
    Amount *float64
    Price *float64
    Params *map[string]interface{}
}

type EditOrderWsOptions func(opts *EditOrderWsOptionsStruct)

func WithEditOrderWsAmount(amount float64) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithEditOrderWsPrice(price float64) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditOrderWsParams(params map[string]interface{}) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrderWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrderWsOptions func(opts *CancelOrderWsOptionsStruct)

func WithCancelOrderWsSymbol(symbol string) CancelOrderWsOptions {
    return func(opts *CancelOrderWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelOrderWsParams(params map[string]interface{}) CancelOrderWsOptions {
    return func(opts *CancelOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelAllOrdersWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelAllOrdersWsOptions func(opts *CancelAllOrdersWsOptionsStruct)

func WithCancelAllOrdersWsSymbol(symbol string) CancelAllOrdersWsOptions {
    return func(opts *CancelAllOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelAllOrdersWsParams(params map[string]interface{}) CancelAllOrdersWsOptions {
    return func(opts *CancelAllOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchOrderWsOptions func(opts *FetchOrderWsOptionsStruct)

func WithFetchOrderWsSymbol(symbol string) FetchOrderWsOptions {
    return func(opts *FetchOrderWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderWsParams(params map[string]interface{}) FetchOrderWsOptions {
    return func(opts *FetchOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrdersWsOptions func(opts *FetchOrdersWsOptionsStruct)

func WithFetchOrdersWsSymbol(symbol string) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrdersWsSince(since int64) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrdersWsLimit(limit int64) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrdersWsParams(params map[string]interface{}) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchClosedOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchClosedOrdersWsOptions func(opts *FetchClosedOrdersWsOptionsStruct)

func WithFetchClosedOrdersWsSymbol(symbol string) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchClosedOrdersWsSince(since int64) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchClosedOrdersWsLimit(limit int64) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchClosedOrdersWsParams(params map[string]interface{}) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOpenOrdersWsOptions func(opts *FetchOpenOrdersWsOptionsStruct)

func WithFetchOpenOrdersWsSymbol(symbol string) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOpenOrdersWsSince(since int64) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOpenOrdersWsLimit(limit int64) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOpenOrdersWsParams(params map[string]interface{}) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyTradesWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyTradesWsOptions func(opts *FetchMyTradesWsOptionsStruct)

func WithFetchMyTradesWsSymbol(symbol string) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyTradesWsSince(since int64) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyTradesWsLimit(limit int64) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyTradesWsParams(params map[string]interface{}) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradesWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTradesWsOptions func(opts *FetchTradesWsOptionsStruct)

func WithFetchTradesWsSymbol(symbol string) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchTradesWsSince(since int64) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTradesWsLimit(limit int64) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTradesWsParams(params map[string]interface{}) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Params = &params
    }
}


type WithdrawWsOptionsStruct struct {
    Tag *interface{}
    Params *map[string]interface{}
}

type WithdrawWsOptions func(opts *WithdrawWsOptionsStruct)

func WithWithdrawWsTag(tag interface{}) WithdrawWsOptions {
    return func(opts *WithdrawWsOptionsStruct) {
        opts.Tag = &tag
    }
}


func WithWithdrawWsParams(params map[string]interface{}) WithdrawWsOptions {
    return func(opts *WithdrawWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchWithdrawalsWsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchWithdrawalsWsOptions func(opts *FetchWithdrawalsWsOptionsStruct)

func WithFetchWithdrawalsWsCode(code string) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchWithdrawalsWsSince(since int64) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchWithdrawalsWsLimit(limit int64) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchWithdrawalsWsParams(params map[string]interface{}) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositsWsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchDepositsWsOptions func(opts *FetchDepositsWsOptionsStruct)

func WithFetchDepositsWsCode(code string) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchDepositsWsSince(since int64) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchDepositsWsLimit(limit int64) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchDepositsWsParams(params map[string]interface{}) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrdersForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrdersForSymbolsOptions func(opts *WatchOrdersForSymbolsOptionsStruct)

func WithWatchOrdersForSymbolsSince(since int64) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOrdersForSymbolsLimit(limit int64) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrdersForSymbolsParams(params map[string]interface{}) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultipleWrapperOptionsStruct struct {
    SymbolsArray *[]interface{}
    Params *map[string]interface{}
}

type WatchMultipleWrapperOptions func(opts *WatchMultipleWrapperOptionsStruct)

func WithWatchMultipleWrapperSymbolsArray(symbolsArray []interface{}) WatchMultipleWrapperOptions {
    return func(opts *WatchMultipleWrapperOptionsStruct) {
        opts.SymbolsArray = &symbolsArray
    }
}


func WithWatchMultipleWrapperParams(params map[string]interface{}) WatchMultipleWrapperOptions {
    return func(opts *WatchMultipleWrapperOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrdersWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrdersWsOptions func(opts *CancelOrdersWsOptionsStruct)

func WithCancelOrdersWsSymbol(symbol string) CancelOrdersWsOptions {
    return func(opts *CancelOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchFundingRateHistorySince(since int64) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchFundingRateHistoryLimit(limit int64) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchFundingRateHistoryParams(params map[string]interface{}) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type TransferOptionsStruct struct {
    Params *map[string]interface{}
}

type TransferOptions func(opts *TransferOptionsStruct)

func WithTransferParams(params map[string]interface{}) TransferOptions {
    return func(opts *TransferOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderTradesOptions func(opts *FetchOrderTradesOptionsStruct)

func WithFetchOrderTradesSymbol(symbol string) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderTradesSince(since int64) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrderTradesLimit(limit int64) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderTradesParams(params map[string]interface{}) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingHistoryOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchFundingHistoryOptions func(opts *FetchFundingHistoryOptionsStruct)

func WithFetchFundingHistorySymbol(symbol string) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchFundingHistorySince(since int64) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchFundingHistoryLimit(limit int64) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchFundingHistoryParams(params map[string]interface{}) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type SetLeverageOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetLeverageOptions func(opts *SetLeverageOptionsStruct)

func WithSetLeverageSymbol(symbol string) SetLeverageOptions {
    return func(opts *SetLeverageOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetLeverageParams(params map[string]interface{}) SetLeverageOptions {
    return func(opts *SetLeverageOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsOptions func(opts *FetchPositionsOptionsStruct)

func WithFetchPositionsSymbols(symbols []string) FetchPositionsOptions {
    return func(opts *FetchPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsParams(params map[string]interface{}) FetchPositionsOptions {
    return func(opts *FetchPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrdersOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateOrdersOptions func(opts *CreateOrdersOptionsStruct)

func WithCreateOrdersParams(params map[string]interface{}) CreateOrdersOptions {
    return func(opts *CreateOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingRatesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchFundingRatesOptions func(opts *FetchFundingRatesOptionsStruct)

func WithFetchFundingRatesSymbols(symbols []string) FetchFundingRatesOptions {
    return func(opts *FetchFundingRatesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchFundingRatesParams(params map[string]interface{}) FetchFundingRatesOptions {
    return func(opts *FetchFundingRatesOptionsStruct) {
        opts.Params = &params
    }
}


type SetMarginModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetMarginModeOptions func(opts *SetMarginModeOptionsStruct)

func WithSetMarginModeSymbol(symbol string) SetMarginModeOptions {
    return func(opts *SetMarginModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetMarginModeParams(params map[string]interface{}) SetMarginModeOptions {
    return func(opts *SetMarginModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeverageTiersOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLeverageTiersOptions func(opts *FetchLeverageTiersOptionsStruct)

func WithFetchLeverageTiersSymbols(symbols []string) FetchLeverageTiersOptions {
    return func(opts *FetchLeverageTiersOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLeverageTiersParams(params map[string]interface{}) FetchLeverageTiersOptions {
    return func(opts *FetchLeverageTiersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositWithdrawFeesOptionsStruct struct {
    Codes *[]string
    Params *map[string]interface{}
}

type FetchDepositWithdrawFeesOptions func(opts *FetchDepositWithdrawFeesOptionsStruct)

func WithFetchDepositWithdrawFeesCodes(codes []string) FetchDepositWithdrawFeesOptions {
    return func(opts *FetchDepositWithdrawFeesOptionsStruct) {
        opts.Codes = &codes
    }
}


func WithFetchDepositWithdrawFeesParams(params map[string]interface{}) FetchDepositWithdrawFeesOptions {
    return func(opts *FetchDepositWithdrawFeesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginModesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchMarginModesOptions func(opts *FetchMarginModesOptionsStruct)

func WithFetchMarginModesSymbols(symbols []string) FetchMarginModesOptions {
    return func(opts *FetchMarginModesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchMarginModesParams(params map[string]interface{}) FetchMarginModesOptions {
    return func(opts *FetchMarginModesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeveragesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLeveragesOptions func(opts *FetchLeveragesOptionsStruct)

func WithFetchLeveragesSymbols(symbols []string) FetchLeveragesOptions {
    return func(opts *FetchLeveragesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLeveragesParams(params map[string]interface{}) FetchLeveragesOptions {
    return func(opts *FetchLeveragesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBidsAsksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchBidsAsksOptions func(opts *FetchBidsAsksOptionsStruct)

func WithFetchBidsAsksSymbols(symbols []string) FetchBidsAsksOptions {
    return func(opts *FetchBidsAsksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchBidsAsksParams(params map[string]interface{}) FetchBidsAsksOptions {
    return func(opts *FetchBidsAsksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLastPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLastPricesOptions func(opts *FetchLastPricesOptionsStruct)

func WithFetchLastPricesSymbols(symbols []string) FetchLastPricesOptions {
    return func(opts *FetchLastPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLastPricesParams(params map[string]interface{}) FetchLastPricesOptions {
    return func(opts *FetchLastPricesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarkPriceOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarkPriceOptions func(opts *FetchMarkPriceOptionsStruct)

func WithFetchMarkPriceParams(params map[string]interface{}) FetchMarkPriceOptions {
    return func(opts *FetchMarkPriceOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarkPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchMarkPricesOptions func(opts *FetchMarkPricesOptionsStruct)

func WithFetchMarkPricesSymbols(symbols []string) FetchMarkPricesOptions {
    return func(opts *FetchMarkPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchMarkPricesParams(params map[string]interface{}) FetchMarkPricesOptions {
    return func(opts *FetchMarkPricesOptionsStruct) {
        opts.Params = &params
    }
}


type EditSpotOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type EditSpotOrderOptions func(opts *EditSpotOrderOptionsStruct)

func WithEditSpotOrderPrice(price float64) EditSpotOrderOptions {
    return func(opts *EditSpotOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditSpotOrderParams(params map[string]interface{}) EditSpotOrderOptions {
    return func(opts *EditSpotOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditContractOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type EditContractOrderOptions func(opts *EditContractOrderOptionsStruct)

func WithEditContractOrderPrice(price float64) EditContractOrderOptions {
    return func(opts *EditContractOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditContractOrderParams(params map[string]interface{}) EditContractOrderOptions {
    return func(opts *EditContractOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditOrdersOptionsStruct struct {
    Params *map[string]interface{}
}

type EditOrdersOptions func(opts *EditOrdersOptionsStruct)

func WithEditOrdersParams(params map[string]interface{}) EditOrdersOptions {
    return func(opts *EditOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenOrderOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchOpenOrderOptions func(opts *FetchOpenOrderOptionsStruct)

func WithFetchOpenOrderSymbol(symbol string) FetchOpenOrderOptions {
    return func(opts *FetchOpenOrderOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOpenOrderParams(params map[string]interface{}) FetchOpenOrderOptions {
    return func(opts *FetchOpenOrderOptionsStruct) {
        opts.Params = &params
    }
}


type FetchCanceledOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchCanceledOrdersOptions func(opts *FetchCanceledOrdersOptionsStruct)

func WithFetchCanceledOrdersSymbol(symbol string) FetchCanceledOrdersOptions {
    return func(opts *FetchCanceledOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchCanceledOrdersSince(since int64) FetchCanceledOrdersOptions {
    return func(opts *FetchCanceledOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchCanceledOrdersLimit(limit int64) FetchCanceledOrdersOptions {
    return func(opts *FetchCanceledOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchCanceledOrdersParams(params map[string]interface{}) FetchCanceledOrdersOptions {
    return func(opts *FetchCanceledOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchCanceledAndClosedOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchCanceledAndClosedOrdersOptions func(opts *FetchCanceledAndClosedOrdersOptionsStruct)

func WithFetchCanceledAndClosedOrdersSymbol(symbol string) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchCanceledAndClosedOrdersSince(since int64) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchCanceledAndClosedOrdersLimit(limit int64) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchCanceledAndClosedOrdersParams(params map[string]interface{}) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrdersOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrdersOptions func(opts *CancelOrdersOptionsStruct)

func WithCancelOrdersSymbol(symbol string) CancelOrdersOptions {
    return func(opts *CancelOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelOrdersParams(params map[string]interface{}) CancelOrdersOptions {
    return func(opts *CancelOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyDustTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyDustTradesOptions func(opts *FetchMyDustTradesOptionsStruct)

func WithFetchMyDustTradesSymbol(symbol string) FetchMyDustTradesOptions {
    return func(opts *FetchMyDustTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyDustTradesSince(since int64) FetchMyDustTradesOptions {
    return func(opts *FetchMyDustTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyDustTradesLimit(limit int64) FetchMyDustTradesOptions {
    return func(opts *FetchMyDustTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyDustTradesParams(params map[string]interface{}) FetchMyDustTradesOptions {
    return func(opts *FetchMyDustTradesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransfersOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTransfersOptions func(opts *FetchTransfersOptionsStruct)

func WithFetchTransfersCode(code string) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchTransfersSince(since int64) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTransfersLimit(limit int64) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTransfersParams(params map[string]interface{}) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransactionFeesOptionsStruct struct {
    Codes *[]string
    Params *map[string]interface{}
}

type FetchTransactionFeesOptions func(opts *FetchTransactionFeesOptionsStruct)

func WithFetchTransactionFeesCodes(codes []string) FetchTransactionFeesOptions {
    return func(opts *FetchTransactionFeesOptionsStruct) {
        opts.Codes = &codes
    }
}


func WithFetchTransactionFeesParams(params map[string]interface{}) FetchTransactionFeesOptions {
    return func(opts *FetchTransactionFeesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradingFeeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTradingFeeOptions func(opts *FetchTradingFeeOptionsStruct)

func WithFetchTradingFeeParams(params map[string]interface{}) FetchTradingFeeOptions {
    return func(opts *FetchTradingFeeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchFundingRateOptions func(opts *FetchFundingRateOptionsStruct)

func WithFetchFundingRateParams(params map[string]interface{}) FetchFundingRateOptions {
    return func(opts *FetchFundingRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionOptions func(opts *FetchPositionOptionsStruct)

func WithFetchPositionParams(params map[string]interface{}) FetchPositionOptions {
    return func(opts *FetchPositionOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOptionPositionsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchOptionPositionsOptions func(opts *FetchOptionPositionsOptionsStruct)

func WithFetchOptionPositionsSymbols(symbols []string) FetchOptionPositionsOptions {
    return func(opts *FetchOptionPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchOptionPositionsParams(params map[string]interface{}) FetchOptionPositionsOptions {
    return func(opts *FetchOptionPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchAccountPositionsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchAccountPositionsOptions func(opts *FetchAccountPositionsOptionsStruct)

func WithFetchAccountPositionsSymbols(symbols []string) FetchAccountPositionsOptions {
    return func(opts *FetchAccountPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchAccountPositionsParams(params map[string]interface{}) FetchAccountPositionsOptions {
    return func(opts *FetchAccountPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsRiskOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsRiskOptions func(opts *FetchPositionsRiskOptionsStruct)

func WithFetchPositionsRiskSymbols(symbols []string) FetchPositionsRiskOptions {
    return func(opts *FetchPositionsRiskOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsRiskParams(params map[string]interface{}) FetchPositionsRiskOptions {
    return func(opts *FetchPositionsRiskOptionsStruct) {
        opts.Params = &params
    }
}


type SetPositionModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetPositionModeOptions func(opts *SetPositionModeOptionsStruct)

func WithSetPositionModeSymbol(symbol string) SetPositionModeOptions {
    return func(opts *SetPositionModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetPositionModeParams(params map[string]interface{}) SetPositionModeOptions {
    return func(opts *SetPositionModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchSettlementHistoryOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchSettlementHistoryOptions func(opts *FetchSettlementHistoryOptionsStruct)

func WithFetchSettlementHistorySymbol(symbol string) FetchSettlementHistoryOptions {
    return func(opts *FetchSettlementHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchSettlementHistorySince(since int64) FetchSettlementHistoryOptions {
    return func(opts *FetchSettlementHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchSettlementHistoryLimit(limit int64) FetchSettlementHistoryOptions {
    return func(opts *FetchSettlementHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchSettlementHistoryParams(params map[string]interface{}) FetchSettlementHistoryOptions {
    return func(opts *FetchSettlementHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMySettlementHistoryOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMySettlementHistoryOptions func(opts *FetchMySettlementHistoryOptionsStruct)

func WithFetchMySettlementHistorySymbol(symbol string) FetchMySettlementHistoryOptions {
    return func(opts *FetchMySettlementHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMySettlementHistorySince(since int64) FetchMySettlementHistoryOptions {
    return func(opts *FetchMySettlementHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMySettlementHistoryLimit(limit int64) FetchMySettlementHistoryOptions {
    return func(opts *FetchMySettlementHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMySettlementHistoryParams(params map[string]interface{}) FetchMySettlementHistoryOptions {
    return func(opts *FetchMySettlementHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLedgerEntryOptionsStruct struct {
    Code *string
    Params *map[string]interface{}
}

type FetchLedgerEntryOptions func(opts *FetchLedgerEntryOptionsStruct)

func WithFetchLedgerEntryCode(code string) FetchLedgerEntryOptions {
    return func(opts *FetchLedgerEntryOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchLedgerEntryParams(params map[string]interface{}) FetchLedgerEntryOptions {
    return func(opts *FetchLedgerEntryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLedgerOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLedgerOptions func(opts *FetchLedgerOptionsStruct)

func WithFetchLedgerCode(code string) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchLedgerSince(since int64) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLedgerLimit(limit int64) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLedgerParams(params map[string]interface{}) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Params = &params
    }
}


type FetchCrossBorrowRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchCrossBorrowRateOptions func(opts *FetchCrossBorrowRateOptionsStruct)

func WithFetchCrossBorrowRateParams(params map[string]interface{}) FetchCrossBorrowRateOptions {
    return func(opts *FetchCrossBorrowRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchIsolatedBorrowRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchIsolatedBorrowRateOptions func(opts *FetchIsolatedBorrowRateOptionsStruct)

func WithFetchIsolatedBorrowRateParams(params map[string]interface{}) FetchIsolatedBorrowRateOptions {
    return func(opts *FetchIsolatedBorrowRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBorrowRateHistoryOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchBorrowRateHistoryOptions func(opts *FetchBorrowRateHistoryOptionsStruct)

func WithFetchBorrowRateHistorySince(since int64) FetchBorrowRateHistoryOptions {
    return func(opts *FetchBorrowRateHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchBorrowRateHistoryLimit(limit int64) FetchBorrowRateHistoryOptions {
    return func(opts *FetchBorrowRateHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchBorrowRateHistoryParams(params map[string]interface{}) FetchBorrowRateHistoryOptions {
    return func(opts *FetchBorrowRateHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type CreateGiftCodeOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateGiftCodeOptions func(opts *CreateGiftCodeOptionsStruct)

func WithCreateGiftCodeParams(params map[string]interface{}) CreateGiftCodeOptions {
    return func(opts *CreateGiftCodeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBorrowInterestOptionsStruct struct {
    Code *string
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchBorrowInterestOptions func(opts *FetchBorrowInterestOptionsStruct)

func WithFetchBorrowInterestCode(code string) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchBorrowInterestSymbol(symbol string) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchBorrowInterestSince(since int64) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchBorrowInterestLimit(limit int64) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchBorrowInterestParams(params map[string]interface{}) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenInterestHistoryOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOpenInterestHistoryOptions func(opts *FetchOpenInterestHistoryOptionsStruct)

func WithFetchOpenInterestHistoryTimeframe(timeframe string) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchOpenInterestHistorySince(since int64) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOpenInterestHistoryLimit(limit int64) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOpenInterestHistoryParams(params map[string]interface{}) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyLiquidationsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyLiquidationsOptions func(opts *FetchMyLiquidationsOptionsStruct)

func WithFetchMyLiquidationsSymbol(symbol string) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyLiquidationsSince(since int64) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyLiquidationsLimit(limit int64) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyLiquidationsParams(params map[string]interface{}) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchGreeksOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchGreeksOptions func(opts *FetchGreeksOptionsStruct)

func WithFetchGreeksParams(params map[string]interface{}) FetchGreeksOptions {
    return func(opts *FetchGreeksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchAllGreeksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchAllGreeksOptions func(opts *FetchAllGreeksOptionsStruct)

func WithFetchAllGreeksSymbols(symbols []string) FetchAllGreeksOptions {
    return func(opts *FetchAllGreeksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchAllGreeksParams(params map[string]interface{}) FetchAllGreeksOptions {
    return func(opts *FetchAllGreeksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradingLimitsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchTradingLimitsOptions func(opts *FetchTradingLimitsOptionsStruct)

func WithFetchTradingLimitsSymbols(symbols []string) FetchTradingLimitsOptions {
    return func(opts *FetchTradingLimitsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchTradingLimitsParams(params map[string]interface{}) FetchTradingLimitsOptions {
    return func(opts *FetchTradingLimitsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchPositionModeOptions func(opts *FetchPositionModeOptionsStruct)

func WithFetchPositionModeSymbol(symbol string) FetchPositionModeOptions {
    return func(opts *FetchPositionModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPositionModeParams(params map[string]interface{}) FetchPositionModeOptions {
    return func(opts *FetchPositionModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginModeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarginModeOptions func(opts *FetchMarginModeOptionsStruct)

func WithFetchMarginModeParams(params map[string]interface{}) FetchMarginModeOptions {
    return func(opts *FetchMarginModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOptionOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchOptionOptions func(opts *FetchOptionOptionsStruct)

func WithFetchOptionParams(params map[string]interface{}) FetchOptionOptions {
    return func(opts *FetchOptionOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginAdjustmentHistoryOptionsStruct struct {
    Symbol *string
    Type *string
    Since *float64
    Limit *float64
    Params *map[string]interface{}
}

type FetchMarginAdjustmentHistoryOptions func(opts *FetchMarginAdjustmentHistoryOptionsStruct)

func WithFetchMarginAdjustmentHistorySymbol(symbol string) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMarginAdjustmentHistoryType(typeVar string) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Type = &typeVar
    }
}


func WithFetchMarginAdjustmentHistorySince(since float64) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMarginAdjustmentHistoryLimit(limit float64) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMarginAdjustmentHistoryParams(params map[string]interface{}) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertQuoteOptionsStruct struct {
    Amount *float64
    Params *map[string]interface{}
}

type FetchConvertQuoteOptions func(opts *FetchConvertQuoteOptionsStruct)

func WithFetchConvertQuoteAmount(amount float64) FetchConvertQuoteOptions {
    return func(opts *FetchConvertQuoteOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithFetchConvertQuoteParams(params map[string]interface{}) FetchConvertQuoteOptions {
    return func(opts *FetchConvertQuoteOptionsStruct) {
        opts.Params = &params
    }
}


type CreateConvertTradeOptionsStruct struct {
    Amount *float64
    Params *map[string]interface{}
}

type CreateConvertTradeOptions func(opts *CreateConvertTradeOptionsStruct)

func WithCreateConvertTradeAmount(amount float64) CreateConvertTradeOptions {
    return func(opts *CreateConvertTradeOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithCreateConvertTradeParams(params map[string]interface{}) CreateConvertTradeOptions {
    return func(opts *CreateConvertTradeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertTradeOptionsStruct struct {
    Code *string
    Params *map[string]interface{}
}

type FetchConvertTradeOptions func(opts *FetchConvertTradeOptionsStruct)

func WithFetchConvertTradeCode(code string) FetchConvertTradeOptions {
    return func(opts *FetchConvertTradeOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchConvertTradeParams(params map[string]interface{}) FetchConvertTradeOptions {
    return func(opts *FetchConvertTradeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertTradeHistoryOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchConvertTradeHistoryOptions func(opts *FetchConvertTradeHistoryOptionsStruct)

func WithFetchConvertTradeHistoryCode(code string) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchConvertTradeHistorySince(since int64) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchConvertTradeHistoryLimit(limit int64) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchConvertTradeHistoryParams(params map[string]interface{}) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingIntervalsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchFundingIntervalsOptions func(opts *FetchFundingIntervalsOptionsStruct)

func WithFetchFundingIntervalsSymbols(symbols []string) FetchFundingIntervalsOptions {
    return func(opts *FetchFundingIntervalsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchFundingIntervalsParams(params map[string]interface{}) FetchFundingIntervalsOptions {
    return func(opts *FetchFundingIntervalsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLongShortRatioHistoryOptionsStruct struct {
    Symbol *string
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLongShortRatioHistoryOptions func(opts *FetchLongShortRatioHistoryOptionsStruct)

func WithFetchLongShortRatioHistorySymbol(symbol string) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchLongShortRatioHistoryTimeframe(timeframe string) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchLongShortRatioHistorySince(since int64) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLongShortRatioHistoryLimit(limit int64) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLongShortRatioHistoryParams(params map[string]interface{}) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type TransferInOptionsStruct struct {
    Params *map[string]interface{}
}

type TransferInOptions func(opts *TransferInOptionsStruct)

func WithTransferInParams(params map[string]interface{}) TransferInOptions {
    return func(opts *TransferInOptionsStruct) {
        opts.Params = &params
    }
}


type TransferOutOptionsStruct struct {
    Params *map[string]interface{}
}

type TransferOutOptions func(opts *TransferOutOptionsStruct)

func WithTransferOutParams(params map[string]interface{}) TransferOutOptions {
    return func(opts *TransferOutOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionHistoryOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchPositionHistoryOptions func(opts *FetchPositionHistoryOptionsStruct)

func WithFetchPositionHistorySince(since int64) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPositionHistoryLimit(limit int64) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPositionHistoryParams(params map[string]interface{}) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type CancelAllOrdersAfterOptionsStruct struct {
    Params *map[string]interface{}
}

type CancelAllOrdersAfterOptions func(opts *CancelAllOrdersAfterOptionsStruct)

func WithCancelAllOrdersAfterParams(params map[string]interface{}) CancelAllOrdersAfterOptions {
    return func(opts *CancelAllOrdersAfterOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositAddressesByNetworkOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchDepositAddressesByNetworkOptions func(opts *FetchDepositAddressesByNetworkOptionsStruct)

func WithFetchDepositAddressesByNetworkParams(params map[string]interface{}) FetchDepositAddressesByNetworkOptions {
    return func(opts *FetchDepositAddressesByNetworkOptionsStruct) {
        opts.Params = &params
    }
}


type SetMarginOptionsStruct struct {
    Params *map[string]interface{}
}

type SetMarginOptions func(opts *SetMarginOptionsStruct)

func WithSetMarginParams(params map[string]interface{}) SetMarginOptions {
    return func(opts *SetMarginOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeverageOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchLeverageOptions func(opts *FetchLeverageOptionsStruct)

func WithFetchLeverageParams(params map[string]interface{}) FetchLeverageOptions {
    return func(opts *FetchLeverageOptionsStruct) {
        opts.Params = &params
    }
}


type FetchClosedOrderOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchClosedOrderOptions func(opts *FetchClosedOrderOptionsStruct)

func WithFetchClosedOrderSymbol(symbol string) FetchClosedOrderOptions {
    return func(opts *FetchClosedOrderOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchClosedOrderParams(params map[string]interface{}) FetchClosedOrderOptions {
    return func(opts *FetchClosedOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateDepositAddressOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateDepositAddressOptions func(opts *CreateDepositAddressOptionsStruct)

func WithCreateDepositAddressParams(params map[string]interface{}) CreateDepositAddressOptions {
    return func(opts *CreateDepositAddressOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenInterestsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchOpenInterestsOptions func(opts *FetchOpenInterestsOptionsStruct)

func WithFetchOpenInterestsSymbols(symbols []string) FetchOpenInterestsOptions {
    return func(opts *FetchOpenInterestsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchOpenInterestsParams(params map[string]interface{}) FetchOpenInterestsOptions {
    return func(opts *FetchOpenInterestsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLiquidationsOptions func(opts *FetchLiquidationsOptionsStruct)

func WithFetchLiquidationsSince(since int64) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLiquidationsLimit(limit int64) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLiquidationsParams(params map[string]interface{}) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarketLeverageTiersOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarketLeverageTiersOptions func(opts *FetchMarketLeverageTiersOptionsStruct)

func WithFetchMarketLeverageTiersParams(params map[string]interface{}) FetchMarketLeverageTiersOptions {
    return func(opts *FetchMarketLeverageTiersOptionsStruct) {
        opts.Params = &params
    }
}


func WithCancelOrdersWsParams(params map[string]interface{}) CancelOrdersWsOptions {
    return func(opts *CancelOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyTradesForSymbolsOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyTradesForSymbolsOptions func(opts *WatchMyTradesForSymbolsOptionsStruct)

func WithWatchMyTradesForSymbolsSymbols(symbols []string) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMyTradesForSymbolsSince(since int64) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyTradesForSymbolsLimit(limit int64) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyTradesForSymbolsParams(params map[string]interface{}) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchFundingRateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchFundingRateOptions func(opts *WatchFundingRateOptionsStruct)

func WithWatchFundingRateParams(params map[string]interface{}) WatchFundingRateOptions {
    return func(opts *WatchFundingRateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchFundingRatesOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchFundingRatesOptions func(opts *WatchFundingRatesOptionsStruct)

func WithWatchFundingRatesParams(params map[string]interface{}) WatchFundingRatesOptions {
    return func(opts *WatchFundingRatesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateMultipleOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateMultipleOptions func(opts *WatchPrivateMultipleOptionsStruct)

func WithWatchPrivateMultipleParams(params map[string]interface{}) WatchPrivateMultipleOptions {
    return func(opts *WatchPrivateMultipleOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateRequestOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateRequestOptions func(opts *WatchPrivateRequestOptionsStruct)

func WithWatchPrivateRequestParams(params map[string]interface{}) WatchPrivateRequestOptions {
    return func(opts *WatchPrivateRequestOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateSubscribeOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateSubscribeOptions func(opts *WatchPrivateSubscribeOptionsStruct)

func WithWatchPrivateSubscribeParams(params map[string]interface{}) WatchPrivateSubscribeOptions {
    return func(opts *WatchPrivateSubscribeOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrdersWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateOrdersWsOptions func(opts *CreateOrdersWsOptionsStruct)

func WithCreateOrdersWsParams(params map[string]interface{}) CreateOrdersWsOptions {
    return func(opts *CreateOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrdersByStatusWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrdersByStatusWsOptions func(opts *FetchOrdersByStatusWsOptionsStruct)

func WithFetchOrdersByStatusWsSymbol(symbol string) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrdersByStatusWsSince(since int64) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrdersByStatusWsLimit(limit int64) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrdersByStatusWsParams(params map[string]interface{}) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiHelperOptionsStruct struct {
    Symbols *[]string
    SubscriptionArgs *interface{}
    Params *map[string]interface{}
}

type WatchMultiHelperOptions func(opts *WatchMultiHelperOptionsStruct)

func WithWatchMultiHelperSymbols(symbols []string) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiHelperSubscriptionArgs(subscriptionArgs interface{}) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.SubscriptionArgs = &subscriptionArgs
    }
}


func WithWatchMultiHelperParams(params map[string]interface{}) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiRequestOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMultiRequestOptions func(opts *WatchMultiRequestOptionsStruct)

func WithWatchMultiRequestSymbols(symbols []string) WatchMultiRequestOptions {
    return func(opts *WatchMultiRequestOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiRequestParams(params map[string]interface{}) WatchMultiRequestOptions {
    return func(opts *WatchMultiRequestOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPositionOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type WatchPositionOptions func(opts *WatchPositionOptionsStruct)

func WithWatchPositionSymbol(symbol string) WatchPositionOptions {
    return func(opts *WatchPositionOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchPositionParams(params map[string]interface{}) WatchPositionOptions {
    return func(opts *WatchPositionOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSpotPublicOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSpotPublicOptions func(opts *WatchSpotPublicOptionsStruct)

func WithWatchSpotPublicParams(params map[string]interface{}) WatchSpotPublicOptions {
    return func(opts *WatchSpotPublicOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSpotPrivateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSpotPrivateOptions func(opts *WatchSpotPrivateOptionsStruct)

func WithWatchSpotPrivateParams(params map[string]interface{}) WatchSpotPrivateOptions {
    return func(opts *WatchSpotPrivateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSwapPublicOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSwapPublicOptions func(opts *WatchSwapPublicOptionsStruct)

func WithWatchSwapPublicParams(params map[string]interface{}) WatchSwapPublicOptions {
    return func(opts *WatchSwapPublicOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSwapPrivateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSwapPrivateOptions func(opts *WatchSwapPrivateOptionsStruct)

func WithWatchSwapPrivateParams(params map[string]interface{}) WatchSwapPrivateOptions {
    return func(opts *WatchSwapPrivateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchManyOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchManyOptions func(opts *WatchManyOptionsStruct)

func WithWatchManyParams(params map[string]interface{}) WatchManyOptions {
    return func(opts *WatchManyOptionsStruct) {
        opts.Params = &params
    }
}

