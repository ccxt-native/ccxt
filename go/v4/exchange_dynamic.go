package ccxt

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code



func DynamicallyCreateInstance(exchangeId string, exchangeArgs map[string]interface{}) (ICoreExchange, bool) {
    switch exchangeId {
    case "Exchange":
        ExchangeItf := &Exchange{}
        ExchangeItf.Init(exchangeArgs)
        return ExchangeItf, true
    case "AlpacaCore":
        alpacaItf := &AlpacaCore{}
        alpacaItf.Init(exchangeArgs)
        return alpacaItf, true
    case "ApexCore":
        apexItf := &ApexCore{}
        apexItf.Init(exchangeArgs)
        return apexItf, true
    case "AscendexCore":
        ascendexItf := &AscendexCore{}
        ascendexItf.Init(exchangeArgs)
        return ascendexItf, true
    case "BequantCore":
        bequantItf := &BequantCore{}
        bequantItf.Init(exchangeArgs)
        return bequantItf, true
    case "BigoneCore":
        bigoneItf := &BigoneCore{}
        bigoneItf.Init(exchangeArgs)
        return bigoneItf, true
    case "BinanceCore":
        binanceItf := &BinanceCore{}
        binanceItf.Init(exchangeArgs)
        return binanceItf, true
    case "BinancecoinmCore":
        binancecoinmItf := &BinancecoinmCore{}
        binancecoinmItf.Init(exchangeArgs)
        return binancecoinmItf, true
    case "BinanceusCore":
        binanceusItf := &BinanceusCore{}
        binanceusItf.Init(exchangeArgs)
        return binanceusItf, true
    case "BinanceusdmCore":
        binanceusdmItf := &BinanceusdmCore{}
        binanceusdmItf.Init(exchangeArgs)
        return binanceusdmItf, true
    case "BingxCore":
        bingxItf := &BingxCore{}
        bingxItf.Init(exchangeArgs)
        return bingxItf, true
    case "Bit2cCore":
        bit2cItf := &Bit2cCore{}
        bit2cItf.Init(exchangeArgs)
        return bit2cItf, true
    case "BitbankCore":
        bitbankItf := &BitbankCore{}
        bitbankItf.Init(exchangeArgs)
        return bitbankItf, true
    case "BitbnsCore":
        bitbnsItf := &BitbnsCore{}
        bitbnsItf.Init(exchangeArgs)
        return bitbnsItf, true
    case "BitfinexCore":
        bitfinexItf := &BitfinexCore{}
        bitfinexItf.Init(exchangeArgs)
        return bitfinexItf, true
    case "BitflyerCore":
        bitflyerItf := &BitflyerCore{}
        bitflyerItf.Init(exchangeArgs)
        return bitflyerItf, true
    case "BitgetCore":
        bitgetItf := &BitgetCore{}
        bitgetItf.Init(exchangeArgs)
        return bitgetItf, true
    case "BithumbCore":
        bithumbItf := &BithumbCore{}
        bithumbItf.Init(exchangeArgs)
        return bithumbItf, true
    case "BitmartCore":
        bitmartItf := &BitmartCore{}
        bitmartItf.Init(exchangeArgs)
        return bitmartItf, true
    case "BitmexCore":
        bitmexItf := &BitmexCore{}
        bitmexItf.Init(exchangeArgs)
        return bitmexItf, true
    case "BitoproCore":
        bitoproItf := &BitoproCore{}
        bitoproItf.Init(exchangeArgs)
        return bitoproItf, true
    case "BitrueCore":
        bitrueItf := &BitrueCore{}
        bitrueItf.Init(exchangeArgs)
        return bitrueItf, true
    case "BitsoCore":
        bitsoItf := &BitsoCore{}
        bitsoItf.Init(exchangeArgs)
        return bitsoItf, true
    case "BitstampCore":
        bitstampItf := &BitstampCore{}
        bitstampItf.Init(exchangeArgs)
        return bitstampItf, true
    case "BitteamCore":
        bitteamItf := &BitteamCore{}
        bitteamItf.Init(exchangeArgs)
        return bitteamItf, true
    case "BittradeCore":
        bittradeItf := &BittradeCore{}
        bittradeItf.Init(exchangeArgs)
        return bittradeItf, true
    case "BitvavoCore":
        bitvavoItf := &BitvavoCore{}
        bitvavoItf.Init(exchangeArgs)
        return bitvavoItf, true
    case "BlockchaincomCore":
        blockchaincomItf := &BlockchaincomCore{}
        blockchaincomItf.Init(exchangeArgs)
        return blockchaincomItf, true
    case "BlofinCore":
        blofinItf := &BlofinCore{}
        blofinItf.Init(exchangeArgs)
        return blofinItf, true
    case "BtcalphaCore":
        btcalphaItf := &BtcalphaCore{}
        btcalphaItf.Init(exchangeArgs)
        return btcalphaItf, true
    case "BtcboxCore":
        btcboxItf := &BtcboxCore{}
        btcboxItf.Init(exchangeArgs)
        return btcboxItf, true
    case "BtcmarketsCore":
        btcmarketsItf := &BtcmarketsCore{}
        btcmarketsItf.Init(exchangeArgs)
        return btcmarketsItf, true
    case "BtcturkCore":
        btcturkItf := &BtcturkCore{}
        btcturkItf.Init(exchangeArgs)
        return btcturkItf, true
    case "BybitCore":
        bybitItf := &BybitCore{}
        bybitItf.Init(exchangeArgs)
        return bybitItf, true
    case "CexCore":
        cexItf := &CexCore{}
        cexItf.Init(exchangeArgs)
        return cexItf, true
    case "CoinbaseCore":
        coinbaseItf := &CoinbaseCore{}
        coinbaseItf.Init(exchangeArgs)
        return coinbaseItf, true
    case "CoinbaseadvancedCore":
        coinbaseadvancedItf := &CoinbaseadvancedCore{}
        coinbaseadvancedItf.Init(exchangeArgs)
        return coinbaseadvancedItf, true
    case "CoinbaseexchangeCore":
        coinbaseexchangeItf := &CoinbaseexchangeCore{}
        coinbaseexchangeItf.Init(exchangeArgs)
        return coinbaseexchangeItf, true
    case "CoinbaseinternationalCore":
        coinbaseinternationalItf := &CoinbaseinternationalCore{}
        coinbaseinternationalItf.Init(exchangeArgs)
        return coinbaseinternationalItf, true
    case "CoincatchCore":
        coincatchItf := &CoincatchCore{}
        coincatchItf.Init(exchangeArgs)
        return coincatchItf, true
    case "CoincheckCore":
        coincheckItf := &CoincheckCore{}
        coincheckItf.Init(exchangeArgs)
        return coincheckItf, true
    case "CoinexCore":
        coinexItf := &CoinexCore{}
        coinexItf.Init(exchangeArgs)
        return coinexItf, true
    case "CoinmateCore":
        coinmateItf := &CoinmateCore{}
        coinmateItf.Init(exchangeArgs)
        return coinmateItf, true
    case "CoinmetroCore":
        coinmetroItf := &CoinmetroCore{}
        coinmetroItf.Init(exchangeArgs)
        return coinmetroItf, true
    case "CoinoneCore":
        coinoneItf := &CoinoneCore{}
        coinoneItf.Init(exchangeArgs)
        return coinoneItf, true
    case "CoinsphCore":
        coinsphItf := &CoinsphCore{}
        coinsphItf.Init(exchangeArgs)
        return coinsphItf, true
    case "CoinspotCore":
        coinspotItf := &CoinspotCore{}
        coinspotItf.Init(exchangeArgs)
        return coinspotItf, true
    case "CryptocomCore":
        cryptocomItf := &CryptocomCore{}
        cryptocomItf.Init(exchangeArgs)
        return cryptocomItf, true
    case "CryptomusCore":
        cryptomusItf := &CryptomusCore{}
        cryptomusItf.Init(exchangeArgs)
        return cryptomusItf, true
    case "DefxCore":
        defxItf := &DefxCore{}
        defxItf.Init(exchangeArgs)
        return defxItf, true
    case "DeltaCore":
        deltaItf := &DeltaCore{}
        deltaItf.Init(exchangeArgs)
        return deltaItf, true
    case "DeribitCore":
        deribitItf := &DeribitCore{}
        deribitItf.Init(exchangeArgs)
        return deribitItf, true
    case "DeriveCore":
        deriveItf := &DeriveCore{}
        deriveItf.Init(exchangeArgs)
        return deriveItf, true
    case "DigifinexCore":
        digifinexItf := &DigifinexCore{}
        digifinexItf.Init(exchangeArgs)
        return digifinexItf, true
    case "EllipxCore":
        ellipxItf := &EllipxCore{}
        ellipxItf.Init(exchangeArgs)
        return ellipxItf, true
    case "ExmoCore":
        exmoItf := &ExmoCore{}
        exmoItf.Init(exchangeArgs)
        return exmoItf, true
    case "FmfwioCore":
        fmfwioItf := &FmfwioCore{}
        fmfwioItf.Init(exchangeArgs)
        return fmfwioItf, true
    case "FoxbitCore":
        foxbitItf := &FoxbitCore{}
        foxbitItf.Init(exchangeArgs)
        return foxbitItf, true
    case "GateCore":
        gateItf := &GateCore{}
        gateItf.Init(exchangeArgs)
        return gateItf, true
    case "GateioCore":
        gateioItf := &GateioCore{}
        gateioItf.Init(exchangeArgs)
        return gateioItf, true
    case "GeminiCore":
        geminiItf := &GeminiCore{}
        geminiItf.Init(exchangeArgs)
        return geminiItf, true
    case "HashkeyCore":
        hashkeyItf := &HashkeyCore{}
        hashkeyItf.Init(exchangeArgs)
        return hashkeyItf, true
    case "HitbtcCore":
        hitbtcItf := &HitbtcCore{}
        hitbtcItf.Init(exchangeArgs)
        return hitbtcItf, true
    case "HollaexCore":
        hollaexItf := &HollaexCore{}
        hollaexItf.Init(exchangeArgs)
        return hollaexItf, true
    case "HtxCore":
        htxItf := &HtxCore{}
        htxItf.Init(exchangeArgs)
        return htxItf, true
    case "HuobiCore":
        huobiItf := &HuobiCore{}
        huobiItf.Init(exchangeArgs)
        return huobiItf, true
    case "HyperliquidCore":
        hyperliquidItf := &HyperliquidCore{}
        hyperliquidItf.Init(exchangeArgs)
        return hyperliquidItf, true
    case "IndependentreserveCore":
        independentreserveItf := &IndependentreserveCore{}
        independentreserveItf.Init(exchangeArgs)
        return independentreserveItf, true
    case "IndodaxCore":
        indodaxItf := &IndodaxCore{}
        indodaxItf.Init(exchangeArgs)
        return indodaxItf, true
    case "KrakenCore":
        krakenItf := &KrakenCore{}
        krakenItf.Init(exchangeArgs)
        return krakenItf, true
    case "KrakenfuturesCore":
        krakenfuturesItf := &KrakenfuturesCore{}
        krakenfuturesItf.Init(exchangeArgs)
        return krakenfuturesItf, true
    case "KucoinCore":
        kucoinItf := &KucoinCore{}
        kucoinItf.Init(exchangeArgs)
        return kucoinItf, true
    case "KucoinfuturesCore":
        kucoinfuturesItf := &KucoinfuturesCore{}
        kucoinfuturesItf.Init(exchangeArgs)
        return kucoinfuturesItf, true
    case "LatokenCore":
        latokenItf := &LatokenCore{}
        latokenItf.Init(exchangeArgs)
        return latokenItf, true
    case "LbankCore":
        lbankItf := &LbankCore{}
        lbankItf.Init(exchangeArgs)
        return lbankItf, true
    case "LunoCore":
        lunoItf := &LunoCore{}
        lunoItf.Init(exchangeArgs)
        return lunoItf, true
    case "MercadoCore":
        mercadoItf := &MercadoCore{}
        mercadoItf.Init(exchangeArgs)
        return mercadoItf, true
    case "MexcCore":
        mexcItf := &MexcCore{}
        mexcItf.Init(exchangeArgs)
        return mexcItf, true
    case "ModetradeCore":
        modetradeItf := &ModetradeCore{}
        modetradeItf.Init(exchangeArgs)
        return modetradeItf, true
    case "MyokxCore":
        myokxItf := &MyokxCore{}
        myokxItf.Init(exchangeArgs)
        return myokxItf, true
    case "NdaxCore":
        ndaxItf := &NdaxCore{}
        ndaxItf.Init(exchangeArgs)
        return ndaxItf, true
    case "NovadaxCore":
        novadaxItf := &NovadaxCore{}
        novadaxItf.Init(exchangeArgs)
        return novadaxItf, true
    case "OceanexCore":
        oceanexItf := &OceanexCore{}
        oceanexItf.Init(exchangeArgs)
        return oceanexItf, true
    case "OkcoinCore":
        okcoinItf := &OkcoinCore{}
        okcoinItf.Init(exchangeArgs)
        return okcoinItf, true
    case "OkxCore":
        okxItf := &OkxCore{}
        okxItf.Init(exchangeArgs)
        return okxItf, true
    case "OkxusCore":
        okxusItf := &OkxusCore{}
        okxusItf.Init(exchangeArgs)
        return okxusItf, true
    case "OnetradingCore":
        onetradingItf := &OnetradingCore{}
        onetradingItf.Init(exchangeArgs)
        return onetradingItf, true
    case "OxfunCore":
        oxfunItf := &OxfunCore{}
        oxfunItf.Init(exchangeArgs)
        return oxfunItf, true
    case "P2bCore":
        p2bItf := &P2bCore{}
        p2bItf.Init(exchangeArgs)
        return p2bItf, true
    case "ParadexCore":
        paradexItf := &ParadexCore{}
        paradexItf.Init(exchangeArgs)
        return paradexItf, true
    case "PaymiumCore":
        paymiumItf := &PaymiumCore{}
        paymiumItf.Init(exchangeArgs)
        return paymiumItf, true
    case "PhemexCore":
        phemexItf := &PhemexCore{}
        phemexItf.Init(exchangeArgs)
        return phemexItf, true
    case "PoloniexCore":
        poloniexItf := &PoloniexCore{}
        poloniexItf.Init(exchangeArgs)
        return poloniexItf, true
    case "ProbitCore":
        probitItf := &ProbitCore{}
        probitItf.Init(exchangeArgs)
        return probitItf, true
    case "TimexCore":
        timexItf := &TimexCore{}
        timexItf.Init(exchangeArgs)
        return timexItf, true
    case "TokocryptoCore":
        tokocryptoItf := &TokocryptoCore{}
        tokocryptoItf.Init(exchangeArgs)
        return tokocryptoItf, true
    case "TradeogreCore":
        tradeogreItf := &TradeogreCore{}
        tradeogreItf.Init(exchangeArgs)
        return tradeogreItf, true
    case "UpbitCore":
        upbitItf := &UpbitCore{}
        upbitItf.Init(exchangeArgs)
        return upbitItf, true
    case "VertexCore":
        vertexItf := &VertexCore{}
        vertexItf.Init(exchangeArgs)
        return vertexItf, true
    case "WavesexchangeCore":
        wavesexchangeItf := &WavesexchangeCore{}
        wavesexchangeItf.Init(exchangeArgs)
        return wavesexchangeItf, true
    case "WhitebitCore":
        whitebitItf := &WhitebitCore{}
        whitebitItf.Init(exchangeArgs)
        return whitebitItf, true
    case "WooCore":
        wooItf := &WooCore{}
        wooItf.Init(exchangeArgs)
        return wooItf, true
    case "WoofiproCore":
        woofiproItf := &WoofiproCore{}
        woofiproItf.Init(exchangeArgs)
        return woofiproItf, true
    case "XtCore":
        xtItf := &XtCore{}
        xtItf.Init(exchangeArgs)
        return xtItf, true
    case "YobitCore":
        yobitItf := &YobitCore{}
        yobitItf.Init(exchangeArgs)
        return yobitItf, true
    case "ZaifCore":
        zaifItf := &ZaifCore{}
        zaifItf.Init(exchangeArgs)
        return zaifItf, true
    case "ZondaCore":
        zondaItf := &ZondaCore{}
        zondaItf.Init(exchangeArgs)
        return zondaItf, true
        default:
            return nil, false
    }
    return nil, false
}
